package com.univr.diabetes_logger.controller;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.util.UriComponentsBuilder;

import com.univr.diabetes_logger.model.Patient;
import com.univr.diabetes_logger.service.PatientService;

/**
 * PatientController
 */
@RestController // This means that this class is a Controller
@RequestMapping(path = "/patients") // This means URL's start with /patients (after Application path)
public class PatientController {
  @Autowired // This means to get the bean called patientRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private PatientService patientService;

  public PatientController(PatientService patientService) {
    this.patientService = patientService;
  }

  @GetMapping
  public Iterable<Patient> getAllPatients() {
    return patientService.getAll();
  }

  @GetMapping("/{id}")
  public ResponseEntity<Patient> getPatientById(@PathVariable Integer id) {
    Optional<Patient> patient = patientService.getById(id);

    if (patient.isEmpty()) {
      return ResponseEntity.notFound().build();
    }

    return ResponseEntity.ok(patient.get());
  }

  @PostMapping
  public ResponseEntity<Patient> createPatient(@RequestBody Patient patient, UriComponentsBuilder uriBuilder) {
    Patient created = patientService.create(patient);

    var uri = uriBuilder.path("/patients/{id}").buildAndExpand(created.getId()).toUri();
    return ResponseEntity.created(uri).body(created);
  }

  @PutMapping("/{id}")
  public Patient updatePatient(@PathVariable Integer id, @RequestBody Patient patient) {
    return patientService.update(id, patient);
  }

  @DeleteMapping("/{id}")
  public Patient deletePatient(@PathVariable Integer id) {
    return patientService.delete(id);
  }
}
